<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.my</groupId>
    <artifactId>my-tools</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <properties>
        <!--统一版本-->
        <revision>1.0.1</revision>

        <!--第三方依赖-->
        <lombok.version>1.18.30</lombok.version>
        <junit.version>4.12</junit.version>
        <logback.version>1.2.13</logback.version>
        <jackson.version>2.17.0</jackson.version>
        <okhttp.version>4.11.0</okhttp.version>
        <cglib.version>3.3.0</cglib.version>
        <bouncycastle.version>1.68</bouncycastle.version>

        <!-- 编译和构建 -->
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--子模块-->
    <modules>
        <module>tools-base</module>
        <module>tools-thread</module>
        <module>tools-balancer</module>
        <module>tools-monitor</module>
        <module>tools-http</module>
        <module>tools-bom</module>
        <module>tools-encrypt</module>
        <module>test</module>
    </modules>

    <!--全局依赖-->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!--依赖管理-->
    <dependencyManagement>
        <dependencies>
            <!--本项目模块-->
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-balancer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-encrypt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-http</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-monitor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.my</groupId>
                <artifactId>tools-thread</artifactId>
                <version>${project.version}</version>
            </dependency>


            <!--第三方库依赖-->
            <!--log-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!--单元测试-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--jackson-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!--okhttp-->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <!--cglib-->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!--BC 加密库-->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin: 用于设置编译 Java 源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Flatten Maven Plugin: 用于生成简化的 POM 文件和版本统一管理 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 父模块跳过 flatten 操作，仅对子模块执行 -->
                    <skip>${project.parent == null}</skip>
                    <!-- 指定生成的 flattened-pom.xml 文件存放目录 -->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <!-- 配置生成的 flattened-pom.xml 文件名 -->
                    <flattenedPomFilename>${project.artifactId}.flattened-pom.xml</flattenedPomFilename>
                    <!-- 仅解析 CI 友好的属性，例如 revision 等 -->
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
            </plugin>

            <!-- Maven Jar Plugin: 用于自定义生成 JAR 包的清单文件和其他属性 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <!-- 是否添加 Maven 描述符文件 (pom.xml) 到 JAR 包中 -->
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <!-- 定义自定义清单文件中的条目 -->
                        <manifestEntries>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Title>${project.artifactId}</Implementation-Title>
                            <Implementation-Vendor>${project.groupId}</Implementation-Vendor>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
        <!--定义资源文件目录和过滤规则，确保 Maven 将指定资源文件打包到最终构件中。-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>